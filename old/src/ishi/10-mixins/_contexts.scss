@mixin context-panel($color-fg, $color-bg) {
    background-color: $color-bg;
    color: $color-fg;
}

@mixin context-gradient($color-bg) {
    background-image: linear-gradient(to bottom, lighten($color-bg, $gradient-range) 0%, darken($color-bg, $gradient-range) 100%);
}

@mixin context-gradient-reverse($color-bg) {
    background-image: linear-gradient(to bottom, darken($color-bg, $gradient-range) 0%, lighten($color-bg, $gradient-range) 100%);
}

@mixin context-outline() {
    background-color: transparent;
}

@mixin context-standout() {
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.20);
}

@mixin context-sunken() {
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.20);
}


// colors

@mixin context-content-colors($colors) {
    color: mapped_color($colors, 'content-fg');
    background-color: mapped_color($colors, 'content-bg');
    border-color: mapped_color($colors, 'border');

    h1, h2, h3, h4, h5, h6 {
        color: mapped_color($colors, 'content-fg');
        background-color: mapped_color($colors, 'content-bg');
    }

    table.table--striped tr:nth-child(odd) td {
        background-color: mapped_color($colors, 'border');
    }

    tbody tr {
        border-color: mapped_color($colors, 'border');
    }
}

@mixin context-alert-colors($colors) {
    color: color($colors, 'content-fg');
    background-color: mapped_color($colors, 'content-bg');
    border-color: mapped_color($colors, 'headline-bg');

    h1, h2, h3, h4, h5, h6 {
        color: mapped_color($colors, 'headline-fg');
        background-color: mapped_color($colors, 'headline-bg');
    }
}